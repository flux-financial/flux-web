# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the service account key.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GC Container Registry

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GCP_EMAIL: ${{ secrets.GCP_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GCP_ZONE: us-west1
#   GCP_CLUSTER: example-gke-cluster
  IMAGE: flux-web

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master
    
    - name: Get PyOpenSSL
      run: |
        pip install pyopenssl

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      env:
        CLOUDSDK_PYTHON_SITEPACKAGES: 1
        CLOUDSDK_CORE_PROJECT: GCP_PROJECT
      with:
        version: '270.0.0'
        service_account_email: GCP_EMAIL
        service_account_key: ${{ secrets.GCP_KEY }}
      
    # Build the Docker image
    - name: Build
      env:
        CLOUDSDK_CORE_PROJECT: GCP_PROJECT
      run: |
        gcloud builds submit --tag us.gcr.io/"$GCP_PROJECT"/"$IMAGE":latest .
        
#     # Set up Cloud Run and deploy
#     - name: Cloud Run
#       uses: stefda/action-cloud-run@v1.0
#       with:
#         # Name of the docker image
#         image: us.gcr.io/$GCP_PROJECT/$IMAGE
#         # Name of the service in Cloud Run
#         service: $GCP_SERVICE
#         # GCP project
#         project: $GCP_PROJECT
#         # GCP region
#         region: $GCP_ZONE
#         # GCP service key with storage and run permissions
#         service key: ${{ secrets.GCLOUD_AUTH }}
